{"code":"import React from \"react\";\r\nimport createWorkerBlobUrl from \"./lib/createWorkerBlobUrl\";\r\nimport WORKER_STATUS from \"./lib/status\";\r\nimport { useDeepCallback } from \"./hook/useDeepCallback\";\r\nexport var TRANSFERABLE_TYPE;\r\n(function (TRANSFERABLE_TYPE) {\r\n    TRANSFERABLE_TYPE[\"AUTO\"] = \"auto\";\r\n    TRANSFERABLE_TYPE[\"NONE\"] = \"none\";\r\n})(TRANSFERABLE_TYPE || (TRANSFERABLE_TYPE = {}));\r\nconst PROMISE_RESOLVE = \"resolve\";\r\nconst PROMISE_REJECT = \"reject\";\r\nconst DEFAULT_OPTIONS = {\r\n    timeout: undefined,\r\n    remoteDependencies: [],\r\n    autoTerminate: true,\r\n    transferable: TRANSFERABLE_TYPE.AUTO,\r\n};\r\n/**\r\n *\r\n * @param {Function} fn the function to run with web worker\r\n * @param {Object} options useWorker option params\r\n */\r\nexport const useWorker = (fn, options = DEFAULT_OPTIONS) => {\r\n    const [workerStatus, _setWorkerStatus] = React.useState(WORKER_STATUS.PENDING);\r\n    const worker = React.useRef();\r\n    const isRunning = React.useRef(false);\r\n    const promise = React.useRef({});\r\n    const timeoutId = React.useRef();\r\n    const setWorkerStatus = React.useCallback((status) => {\r\n        isRunning.current = status === WORKER_STATUS.RUNNING;\r\n        _setWorkerStatus(status);\r\n    }, []);\r\n    const killWorker = React.useCallback(() => {\r\n        if (worker.current?._url) {\r\n            worker.current.terminate();\r\n            URL.revokeObjectURL(worker.current._url);\r\n            promise.current = {};\r\n            worker.current = undefined;\r\n            window.clearTimeout(timeoutId.current);\r\n        }\r\n    }, []);\r\n    const onWorkerEnd = React.useCallback((status) => {\r\n        const terminate = options.autoTerminate != null\r\n            ? options.autoTerminate\r\n            : DEFAULT_OPTIONS.autoTerminate;\r\n        if (terminate) {\r\n            killWorker();\r\n        }\r\n        setWorkerStatus(status);\r\n    }, [options.autoTerminate, killWorker, setWorkerStatus]);\r\n    const generateWorker = useDeepCallback(() => {\r\n        const { remoteDependencies = DEFAULT_OPTIONS.remoteDependencies, timeout = DEFAULT_OPTIONS.timeout, transferable = DEFAULT_OPTIONS.transferable, } = options;\r\n        const blobUrl = createWorkerBlobUrl(fn, remoteDependencies, transferable /*, localDependencies!*/);\r\n        const newWorker = new Worker(blobUrl);\r\n        newWorker._url = blobUrl;\r\n        newWorker.onmessage = (e) => {\r\n            const [status, result] = e.data;\r\n            switch (status) {\r\n                case WORKER_STATUS.SUCCESS:\r\n                    promise.current[PROMISE_RESOLVE]?.(result);\r\n                    onWorkerEnd(WORKER_STATUS.SUCCESS);\r\n                    break;\r\n                default:\r\n                    promise.current[PROMISE_REJECT]?.(result);\r\n                    onWorkerEnd(WORKER_STATUS.ERROR);\r\n                    break;\r\n            }\r\n        };\r\n        newWorker.onerror = (e) => {\r\n            promise.current[PROMISE_REJECT]?.(e);\r\n            onWorkerEnd(WORKER_STATUS.ERROR);\r\n        };\r\n        if (timeout) {\r\n            timeoutId.current = window.setTimeout(() => {\r\n                killWorker();\r\n                setWorkerStatus(WORKER_STATUS.TIMEOUT_EXPIRED);\r\n            }, timeout);\r\n        }\r\n        return newWorker;\r\n    }, [fn, options, killWorker]);\r\n    const callWorker = React.useCallback((...workerArgs) => {\r\n        const { transferable = DEFAULT_OPTIONS.transferable } = options;\r\n        return new Promise((resolve, reject) => {\r\n            promise.current = {\r\n                [PROMISE_RESOLVE]: resolve,\r\n                [PROMISE_REJECT]: reject,\r\n            };\r\n            const transferList = transferable === TRANSFERABLE_TYPE.AUTO\r\n                ? workerArgs.filter((val) => (\"ArrayBuffer\" in window && val instanceof ArrayBuffer) ||\r\n                    (\"MessagePort\" in window && val instanceof MessagePort) ||\r\n                    (\"ImageBitmap\" in window && val instanceof ImageBitmap) ||\r\n                    (\"OffscreenCanvas\" in window &&\r\n                        val instanceof OffscreenCanvas))\r\n                : [];\r\n            worker.current?.postMessage([[...workerArgs]], transferList);\r\n            setWorkerStatus(WORKER_STATUS.RUNNING);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [setWorkerStatus]);\r\n    const workerHook = React.useCallback((...fnArgs) => {\r\n        const terminate = options.autoTerminate != null\r\n            ? options.autoTerminate\r\n            : DEFAULT_OPTIONS.autoTerminate;\r\n        if (isRunning.current) {\r\n            /* eslint-disable-next-line no-console */\r\n            console.error(\"[useWorker] You can only run one instance of the worker at a time, if you want to run more than one in parallel, create another instance with the hook useWorker(). Read more: https://github.com/alewin/useWorker\");\r\n            return Promise.reject();\r\n        }\r\n        if (terminate || !worker.current) {\r\n            worker.current = generateWorker();\r\n        }\r\n        return callWorker(...fnArgs);\r\n    }, [options.autoTerminate, generateWorker, callWorker]);\r\n    const workerController = {\r\n        status: workerStatus,\r\n        kill: killWorker,\r\n    };\r\n    React.useEffect(() => () => {\r\n        killWorker();\r\n    }, [killWorker]);\r\n    return [workerHook, workerController];\r\n};\r\n//# sourceMappingURL=useWorker.js.map","references":["/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/node_modules/@types/react/index.d.ts","/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/src/lib/createWorkerBlobUrl.ts","/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/src/lib/status.ts","/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/src/hook/useDeepCallback.ts"],"map":"{\"version\":3,\"file\":\"useWorker.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/useWorker.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/dist/useWorker.d.ts","writeByteOrderMark":false,"text":"import WORKER_STATUS from \"./lib/status\";\r\ndeclare type WorkerController = {\r\n    status: WORKER_STATUS;\r\n    kill: Function;\r\n};\r\nexport declare enum TRANSFERABLE_TYPE {\r\n    AUTO = \"auto\",\r\n    NONE = \"none\"\r\n}\r\ndeclare type Options = {\r\n    timeout?: number;\r\n    remoteDependencies?: string[];\r\n    autoTerminate?: boolean;\r\n    transferable?: TRANSFERABLE_TYPE;\r\n};\r\n/**\r\n *\r\n * @param {Function} fn the function to run with web worker\r\n * @param {Object} options useWorker option params\r\n */\r\nexport declare const useWorker: <T extends (...fnArgs: any[]) => any>(fn: T, options?: Options) => [(...fnArgs: Parameters<T>) => Promise<ReturnType<T>>, WorkerController];\r\nexport {};\r\n"}}
