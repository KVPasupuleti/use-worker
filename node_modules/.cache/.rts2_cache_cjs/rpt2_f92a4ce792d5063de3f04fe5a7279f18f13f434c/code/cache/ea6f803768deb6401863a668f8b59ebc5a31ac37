{"code":"import jobRunner from './jobRunner';\r\nimport remoteDepsParser from './remoteDepsParser';\r\n/**\r\n * Converts the \"fn\" function into the syntax needed to be executed within a web worker\r\n *\r\n * @param {Function} fn the function to run with web worker\r\n * @param {Array.<String>} deps array of strings, imported into the worker through \"importScripts\"\r\n *\r\n * @returns {String} a blob url, containing the code of \"fn\" as a string\r\n *\r\n * @example\r\n * createWorkerBlobUrl((a,b) => a+b, [])\r\n * // return \"onmessage=return Promise.resolve((a,b) => a + b)\r\n * .then(postMessage(['SUCCESS', result]))\r\n * .catch(postMessage(['ERROR', error])\"\r\n */\r\nconst createWorkerBlobUrl = (fn, deps, transferable) => {\r\n    // const [context] = isoworker.createContext(localDeps)\r\n    const blobCode = `\n    ${remoteDepsParser(deps)};\n    onmessage=(${jobRunner})({\n      fn: (${fn}),\n      transferable: '${transferable}'\n    })\n  `;\r\n    const blob = new Blob([blobCode], { type: 'text/javascript' });\r\n    const url = URL.createObjectURL(blob);\r\n    return url;\r\n};\r\nexport default createWorkerBlobUrl;\r\n//# sourceMappingURL=createWorkerBlobUrl.js.map","references":["/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/src/useWorker.ts","/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/src/lib/jobRunner.ts","/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/src/lib/remoteDepsParser.ts"],"map":"{\"version\":3,\"file\":\"createWorkerBlobUrl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/lib/createWorkerBlobUrl.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,SAAS,MAAM,aAAa,CAAA;AACnC,OAAO,gBAAgB,MAAM,oBAAoB,CAAA;AAEjD;;;;;;;;;;;;;GAaG;AACH,MAAM,mBAAmB,GAAG,CAC1B,EAAY,EAAE,IAAc,EAAE,YAA+B,EAC7D,EAAE;IACF,uDAAuD;IACvD,MAAM,QAAQ,GAAG;MACb,gBAAgB,CAAC,IAAI,CAAC;iBACX,SAAS;aACb,EAAE;uBACQ,YAAY;;GAEhC,CAAA;IACD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAA;IAC9D,MAAM,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA;IACrC,OAAO,GAAG,CAAA;AACZ,CAAC,CAAA;AAED,eAAe,mBAAmB,CAAA\"}","dts":{"name":"/home/ib_admin/Desktop/KV/Work/git-repos/useWorker/packages/useWorker/dist/lib/createWorkerBlobUrl.d.ts","writeByteOrderMark":false,"text":"import { TRANSFERABLE_TYPE } from '../useWorker';\r\n/**\r\n * Converts the \"fn\" function into the syntax needed to be executed within a web worker\r\n *\r\n * @param {Function} fn the function to run with web worker\r\n * @param {Array.<String>} deps array of strings, imported into the worker through \"importScripts\"\r\n *\r\n * @returns {String} a blob url, containing the code of \"fn\" as a string\r\n *\r\n * @example\r\n * createWorkerBlobUrl((a,b) => a+b, [])\r\n * // return \"onmessage=return Promise.resolve((a,b) => a + b)\r\n * .then(postMessage(['SUCCESS', result]))\r\n * .catch(postMessage(['ERROR', error])\"\r\n */\r\ndeclare const createWorkerBlobUrl: (fn: Function, deps: string[], transferable: TRANSFERABLE_TYPE) => string;\r\nexport default createWorkerBlobUrl;\r\n"}}
